name: CD - Deploy with Terraform and ECR

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set image tag from commit SHA
        run: |
          IMAGE_TAG=gh-${GITHUB_SHA::7}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Verify ECR image exists
        run: |
          aws ecr describe-images \
            --repository-name nisha-ecr \
            --image-ids imageTag=${{ env.IMAGE_TAG }} \
            --region us-east-2 > /dev/null || {
              echo "Image with tag $IMAGE_TAG not found in ECR.";
              exit 1;
          }

      - name: Terraform Init
        run: |
          cd terraform_task8
          terraform init -input=false

      - name: Terraform Import Existing Resources
        run: |
          cd terraform_task8
          terraform import -input=false -var="image_tag=${{ env.IMAGE_TAG }}" aws_iam_role.ecs_task_execution_role ecsTaskExecutionRole

      - name: Terraform Plan
        run: |
          cd terraform_task8
          terraform plan -input=false -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Terraform Apply
        run: |
          cd terraform_task8
          terraform apply -input=false -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Output Terraform values
        run: |
          cd terraform_task8
          echo "Fetching Terraform Outputs..."
          terraform output strapi_url
          terraform output rds_endpoint
