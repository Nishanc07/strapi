name: Deploy to ECS with Blue/Green

on:
  push:
    branches:
      - main

env:
  ECR_REPO_NAME: nisha-strapi
  AWS_REGION: us-east-2

jobs:
  deploy:
    name: Register ECS Task + Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS \
            --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, Tag, and Push Docker image
        run: |
          docker build -t $ECR_REPO_NAME:${{ github.sha }} .
          docker tag $ECR_REPO_NAME:${{ github.sha }} \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:${{ github.sha }}

      - name: Create new task definition from template
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/task-definition-template.json
          container-name: strapi
          image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:${{ github.sha }}

      - name: Register ECS task definition
        id: register-task-def
        uses: aws-actions/amazon-ecs-register-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}

      - name: Deploy to ECS using CodeDeploy
        uses: aws-actions/aws-codedeploy-deploy@v1
        with:
          application-name: nisha-codedeploy-app
          deployment-group: nisha-codedeploy-dg
          deployment-config: CodeDeployDefault.ECSAllAtOnce
          task-definition: ${{ steps.register-task-def.outputs.task-definition-arn }}
          appspec: .github/appspec.yaml
