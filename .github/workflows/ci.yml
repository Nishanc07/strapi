name: CI pipeline

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image variables
        id: vars
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=${{ secrets.AWS_DEFAULT_REGION }}
          REPO_NAME=nisha-ecr
          IMAGE_TAG=gh-${GITHUB_SHA::7}
          ECR_REGISTRY="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"
          IMAGE_URI="$ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG"

          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image to ECR
        uses: docker/build-push-action@v6
        with:
          context: ./my-strapi-project
          file: ./my-strapi-project/Dockerfile
          push: true
          tags: ${{ env.IMAGE_URI }}

      - name: Create tag.txt file
        run: echo "${{ env.IMAGE_TAG }}" > tag.txt

      - name: Upload image tag as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-tag
          path: tag.txt
